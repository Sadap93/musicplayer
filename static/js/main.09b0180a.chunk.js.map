{"version":3,"sources":["componenets/Player.js","componenets/Song.js","componenets/LibrarySong.js","componenets/Library.js","componenets/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","currentSong","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","currentIndex","findIndex","length","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","current","type","onClick","size","icon","faAngleLeft","pause","play","faPause","faPlay","faAngleRight","Song","rotateStyle","alt","name","src","cover","artist","LibrarySong","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","audio","App","useRef","useState","data","mute","setMute","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","a","faVolumeMute","faVolumeUp","volume","onTimeUpdate","onLoadedData","onLoadedMetadata","ref","onEnded","muted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09b0180a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faPlay,\r\n    faAngleLeft,\r\n    faAngleRight,\r\n    faPause,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({ audioRef, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, currentSong, setCurrentSong, setSongs }) => {\r\n\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === nextPrev.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    }\r\n   \r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying === true) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        )\r\n    };\r\n\r\n    const dragHandler = (e) => {\r\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n        audioRef.current.currentTime = e.target.value;\r\n    };\r\n\r\n    const skipTrackHandler = (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if (direction === 'skip-forward') {\r\n            setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if (direction === 'skip-back') {\r\n            if ((currentIndex - 1) % songs.length === -1) {\r\n                setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1])\r\n                return;//return, mert így az alsó nem fog végrehajtódni, ha nics akkor vérehajtódik és így is becrash-sel    \r\n            }\r\n            setCurrentSong(songs[currentIndex - 1 % songs.length]);\r\n            activeLibraryHandler(songs[currentIndex - 1 % songs.length])\r\n        }\r\n    };\r\n\r\n    //Add the styles\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>  {/*Start Time*/}\r\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\r\n                    <input\r\n                        min={0}\r\n                        max={songInfo.duration}\r\n                        value={songInfo.currentTime}\r\n                        onChange={dragHandler}\r\n                        type=\"range\"\r\n                    />\r\n                    <div style={trackAnim} className=\"animate-track\"></div>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>  {/*End Time*/}\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon\r\n                    onClick={() => skipTrackHandler('skip-back')}\r\n                    className=\"skip-back\"\r\n                    size=\"2x\"\r\n                    icon={faAngleLeft}\r\n                />\r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler}\r\n                    className=\"play\"\r\n                    size=\"2x\"\r\n                    icon={isPlaying ? faPause : faPlay}\r\n                />\r\n                <FontAwesomeIcon\r\n                    onClick={() => skipTrackHandler('skip-forward')}\r\n                    className=\"skip-forward\"\r\n                    size=\"2x\"\r\n                    icon={faAngleRight}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ({currentSong, songInfo}) => {\r\n    //Add style\r\n    let time = songInfo.currentTime\r\n    const rotateStyle = {\r\n            transform: `rotate(${time}deg)` \r\n    }\r\n\r\n    return(\r\n        <div className=\"song-container\">\r\n            <img style={rotateStyle} alt={currentSong.name} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Song;","import React from 'react';\r\n\r\nconst LibrarySong = ({song, songs, setSongs, id, setCurrentSong, audioRef, isPlaying}) => {\r\n    const songSelectHandler = () => {\r\n        setCurrentSong(song);\r\n        //Add Active State\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === id){\r\n                return{\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false,\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n\r\n        //check if the song is playing\r\n        // const playPromise = audioRef.current.play();\r\n        // if(isPlaying){\r\n        //     if(playPromise !== undefined){\r\n        //         playPromise.then((audio) => {\r\n        //             audioRef.current.play(); \r\n        //         });\r\n        //     } \r\n        // }\r\n        // console.log(playPromise);\r\n           \r\n    };\r\n    return(\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n            <img alt={song.name} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default LibrarySong;","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return(\r\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map(song => \r\n                <LibrarySong \r\n                    songs={songs} \r\n                    song={song} \r\n                    setCurrentSong={setCurrentSong}\r\n                    id={song.id}\r\n                    key={song.id}\r\n                    audioRef={audioRef}\r\n                    isPlaying={isPlaying}\r\n                    setSongs={setSongs}\r\n                />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n   return(\r\n           <nav>\r\n                <h1>Waves</h1>\r\n                <button onClick={()=> setLibraryStatus(!libraryStatus)}>\r\n                    Library\r\n                    <FontAwesomeIcon icon={faMusic} />\r\n                </button>\r\n           </nav>\r\n       ); \r\n};\r\n\r\nexport default Nav;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Ocean Patio\",\r\n            artist: \"Philanthrope, Dayle\",\r\n            cover:\"https://f4.bcbits.com/img/a0773887931_10.jpg\",\r\n            id: uuidv4(),\r\n            active: true,\r\n            color: ['#72BBCE', '#63180E'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8036\"\r\n        },\r\n        {\r\n            name: \"Tumbling\",\r\n            artist: \"Swørn\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#4B0E4A', '#E9A597'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9225\"\r\n        },\r\n        {\r\n            name: \"Calm\",\r\n            artist: \"ØDYSSEE, Florent Garcia\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2020/06/d9d8ae69141cb7838e3c53bbf393c6218285e384-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#768AFA', '#FFC9BD'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9285\"\r\n        },\r\n        {\r\n            name: \"Casual\",\r\n            artist: \"Middle school\",\r\n            cover:\"https://i1.sndcdn.com/artworks-hqCoI2GdXxyAbeVA-l0Q6Fw-t500x500.jpg\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#47544C', '#ADB1B5'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9395\"\r\n        },\r\n        {\r\n            name: \"Colors Fade\",\r\n            artist: \"Sleepy Fish\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2020/09/686808356b2bbc6a368e372ea604150bc346c788-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#D8DACF', '#A8CED7'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10023\"\r\n        },\r\n        {\r\n            name: \"A Deeper Understanding\",\r\n            artist: \"Aso, Aviino\",\r\n            cover:\"https://f4.bcbits.com/img/a1971989391_10.jpg\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#636652', '#262A21'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9444\"\r\n        },\r\n        {\r\n            name: \"Keep Going\",\r\n            artist: \"Swørn\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#4B0E4A', '#E9A597'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\"\r\n        },\r\n        {\r\n            name: \"Fire Place\",\r\n            artist: \"Sleepy Fish\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2020/07/25a182a6a21588b8f7ad5605ba1118a8ea61bdc2-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#009385', '#027699'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=7976\"\r\n        },\r\n        {\r\n            name: \"Sugarless\",\r\n            artist: \"The Field Tapes, Aviino\",\r\n            cover:\"https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#EDF2DE', '#24335B'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=11243\"\r\n        },\r\n        {\r\n            name: \"Window.\",\r\n            artist: \"Chromonicci\",\r\n            cover:\"https://i.scdn.co/image/ab67616d0000b273770cfc4a20baf7305b56abc4\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#8DC9D4', '#9C253D'],\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9200\"\r\n        },\r\n    ];\r\n}\r\n\r\nexport default chillHop;","import React, { useState, useRef } from \"react\";\n//Import Styles\nimport './styles/app.scss';\n//Adding compontents\nimport Player from './componenets/Player';\nimport Song from './componenets/Song';\nimport Library from './componenets/Library';\nimport Nav from './componenets/Nav';\n//Import data\nimport data from \"./data\";\n//Import Icon\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVolumeMute, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n\n  //Ref\n  const audioRef = useRef(null);\n\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [mute, setMute] = useState(false);\n\n  //Handlers\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate Percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({ ...songInfo, currentTime: current, duration: duration, animationPercentage: animation })\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  //check if the song is playing\n  const autoPlayHandler = () => {\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  const muteHandler = () => {\n    setMute(!mute);\n  };\n\n  const volumeHandler = (e) => {\n    audioRef.current.volume = e.target.value / 100\n  };\n\n\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <Song\n        currentSong={currentSong}\n        songInfo={songInfo}\n      />\n      <Player\n        audioRef={audioRef}\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <div className=\"volume-container\">\n        <button onClick={muteHandler} className=\"mute\">\n          <FontAwesomeIcon icon={mute ? faVolumeMute : faVolumeUp} />\n        </button>\n        <div className=\"bar-container\">\n           <input onChange={volumeHandler} id=\"volume\" type=\"range\" />\n        </div>\n      </div>\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedData={autoPlayHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n        muted={mute}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/app.scss'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}